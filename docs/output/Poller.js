Ext.data.JsonP.Poller({"parentMixins":[],"tagname":"class","alternateClassNames":[],"override":null,"uses":[],"inheritdoc":null,"html_meta":{},"files":[{"href":"poller.html#Poller","filename":"poller.js"}],"linenr":1,"requires":[],"members":{"event":[],"css_mixin":[],"cfg":[],"method":[{"tagname":"method","owner":"Poller","meta":{"chainable":true},"name":"callback","id":"method-callback"},{"tagname":"method","owner":"Poller","meta":{"chainable":true},"name":"checkback","id":"method-checkback"},{"tagname":"method","owner":"Poller","meta":{"chainable":true},"name":"failback","id":"method-failback"},{"tagname":"method","owner":"Poller","meta":{"chainable":true},"name":"intervals","id":"method-intervals"},{"tagname":"method","owner":"Poller","meta":{"chainable":true},"name":"next","id":"method-next"},{"tagname":"method","owner":"Poller","meta":{"chainable":true},"name":"restart","id":"method-restart"},{"tagname":"method","owner":"Poller","meta":{"deferred":true},"name":"start","id":"method-start"},{"tagname":"method","owner":"Poller","meta":{"chainable":true},"name":"stop","id":"method-stop"}],"property":[],"css_var":[]},"extends":null,"statics":{"event":[],"css_mixin":[],"cfg":[],"method":[],"property":[],"css_var":[]},"enum":null,"meta":{},"private":null,"superclasses":[],"component":false,"name":"Poller","inheritable":null,"id":"class-Poller","aliases":{},"singleton":false,"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/poller.html#Poller' target='_blank'>poller.js</a></div></pre><div class='doc-contents'><p>Small class to check a remote server at regular interval, supports deferred.</p>\n\n<pre><code>var poller = new Poller();\npoller\n    .intervals([1000,5000,10000])\n    .checkback(function() {\n        // could be anything asynchronous\n    var deferred = $.Deferred();\n        $.getJSON('/is/server/ready') // could return this directly\n            .done(function(response) {\n                deferred.resolve();\n                })\n            .fail(function() {\n                deferred.reject();\n                })\n        return deferred.promise();\n        })\n    .callback(function() {\n        // checkback succeded and the end of one interval\n        // stops the poller and callback\n        console.log('Ok')\n        })\n    .failback(function() {\n        // after the third attempt, exits calling the failback\n        // function\n        console.log('Failed');\n        });\n    poller.start() // start the process\n        .done(function() {\n            console.log('Polling ok');\n            })\n        .fail(function() {\n            console.log('Polling failed');\n            });\n</code></pre>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-callback' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Poller'>Poller</span><br/><a href='source/poller.html#Poller-method-callback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Poller-method-callback' class='name expandable'>callback</a>( <span class='pre'>callback</span> ) : <a href=\"#!/api/Poller\" rel=\"Poller\" class=\"docClass\">Poller</a><strong class='chainable signature' >chainable</strong></div><div class='description'><div class='short'>Set a callback in case polling succeed, Poller.start returns a deferred, it's possibile to use the .done() instead ...</div><div class='long'><p>Set a callback in case polling succeed, <a href=\"#!/api/Poller-method-start\" rel=\"Poller-method-start\" class=\"docClass\">Poller.start</a> returns a deferred, it's possibile to use the .done() instead</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Function<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Poller\" rel=\"Poller\" class=\"docClass\">Poller</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-checkback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Poller'>Poller</span><br/><a href='source/poller.html#Poller-method-checkback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Poller-method-checkback' class='name expandable'>checkback</a>( <span class='pre'>checkback</span> ) : <a href=\"#!/api/Poller\" rel=\"Poller\" class=\"docClass\">Poller</a><strong class='chainable signature' >chainable</strong></div><div class='description'><div class='short'>Asynchronous method to check against the remote server whether the polling is succesfull. ...</div><div class='long'><p>Asynchronous method to check against the remote server whether the polling is succesfull.\nThe checkback function receive a callback function as parameter, call it with a true|false parameter to change the status\nof the poll.\nAlternatively the checkback can return a deferred/promise, resolving or rejecting it change the status of the poller\nWith callback</p>\n\n<pre><code>.checkback(function(callback) {\n    // could be anything asynchronous\n    callback(true);\n    });     \n</code></pre>\n\n<p>With deferred</p>\n\n<pre><code>.checkback(function() {\n    // could be anything asynchronous\n    var deferred = $.Deferred();\n    deferred.resolve(); \n    return deferred.promise();      \n    });\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>checkback</span> : Function<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Poller\" rel=\"Poller\" class=\"docClass\">Poller</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-failback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Poller'>Poller</span><br/><a href='source/poller.html#Poller-method-failback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Poller-method-failback' class='name expandable'>failback</a>( <span class='pre'>failback</span> ) : <a href=\"#!/api/Poller\" rel=\"Poller\" class=\"docClass\">Poller</a><strong class='chainable signature' >chainable</strong></div><div class='description'><div class='short'>Set a failback in case polling fails, Poller.start returns a deferred, it's possibile to use the .fail() instead ...</div><div class='long'><p>Set a failback in case polling fails, <a href=\"#!/api/Poller-method-start\" rel=\"Poller-method-start\" class=\"docClass\">Poller.start</a> returns a deferred, it's possibile to use the .fail() instead</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>failback</span> : Function<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Poller\" rel=\"Poller\" class=\"docClass\">Poller</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-intervals' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Poller'>Poller</span><br/><a href='source/poller.html#Poller-method-intervals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Poller-method-intervals' class='name expandable'>intervals</a>( <span class='pre'>intervals</span> ) : <a href=\"#!/api/Poller\" rel=\"Poller\" class=\"docClass\">Poller</a><strong class='chainable signature' >chainable</strong></div><div class='description'><div class='short'>Sets the intevals to check the remote server ...</div><div class='long'><p>Sets the intevals to check the remote server</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>intervals</span> : Array<div class='sub-desc'><p>Array of milliseconds to check the server</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Poller\" rel=\"Poller\" class=\"docClass\">Poller</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-next' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Poller'>Poller</span><br/><a href='source/poller.html#Poller-method-next' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Poller-method-next' class='name expandable'>next</a>( <span class='pre'></span> ) : <a href=\"#!/api/Poller\" rel=\"Poller\" class=\"docClass\">Poller</a><strong class='chainable signature' >chainable</strong></div><div class='description'><div class='short'>Skip to the next interval immediately without waiting ...</div><div class='long'><p>Skip to the next interval immediately without waiting</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Poller\" rel=\"Poller\" class=\"docClass\">Poller</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-restart' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Poller'>Poller</span><br/><a href='source/poller.html#Poller-method-restart' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Poller-method-restart' class='name expandable'>restart</a>( <span class='pre'></span> ) : <a href=\"#!/api/Poller\" rel=\"Poller\" class=\"docClass\">Poller</a><strong class='chainable signature' >chainable</strong></div><div class='description'><div class='short'>Restart the poller ...</div><div class='long'><p>Restart the poller</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Poller\" rel=\"Poller\" class=\"docClass\">Poller</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-start' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Poller'>Poller</span><br/><a href='source/poller.html#Poller-method-start' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Poller-method-start' class='name expandable'>start</a>( <span class='pre'></span> )<strong class='deferred signature' >deferred</strong></div><div class='description'><div class='short'>Starts the poller ...</div><div class='long'><p>Starts the poller</p>\n</div></div></div><div id='method-stop' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Poller'>Poller</span><br/><a href='source/poller.html#Poller-method-stop' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Poller-method-stop' class='name expandable'>stop</a>( <span class='pre'></span> ) : <a href=\"#!/api/Poller\" rel=\"Poller\" class=\"docClass\">Poller</a><strong class='chainable signature' >chainable</strong></div><div class='description'><div class='short'>Stops the poller but keep the status ...</div><div class='long'><p>Stops the poller but keep the status</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Poller\" rel=\"Poller\" class=\"docClass\">Poller</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div></div></div></div></div>","mixedInto":[],"subclasses":[],"mixins":[]});